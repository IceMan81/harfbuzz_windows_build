
#line 1 "hb-ot-shape-complex-indic-machine.rl"
/*
 * Copyright Â© 2011,2012  Google, Inc.
 *
 *  This is part of HarfBuzz, a text shaping library.
 *
 * Permission is hereby granted, without written agreement and without
 * license or royalty fees, to use, copy, modify, and distribute this
 * software and its documentation for any purpose, provided that the
 * above copyright notice and the following two paragraphs appear in
 * all copies of this software.
 *
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN
 * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,
 * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 *
 * Google Author(s): Behdad Esfahbod
 */

#ifndef HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH
#define HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH

#include "hb-private.hh"


#line 2 "hb-ot-shape-complex-indic-machine.hh"
static const char _indic_syllable_machine_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	6, 1, 7, 1, 8, 1, 9, 1, 
	10, 1, 11, 1, 12, 1, 13, 1, 
	14, 1, 15, 1, 16, 1, 17, 1, 
	18, 1, 19, 1, 20, 2, 2, 3, 
	2, 2, 4, 2, 2, 5
};

static const short _indic_syllable_machine_key_offsets[] = {
	0, 3, 4, 7, 10, 11, 14, 17, 
	18, 21, 24, 25, 28, 31, 32, 33, 
	34, 35, 39, 40, 41, 45, 46, 47, 
	51, 52, 53, 58, 64, 69, 75, 80, 
	86, 91, 97, 102, 108, 111, 112, 115, 
	118, 119, 122, 125, 126, 129, 132, 133, 
	136, 139, 140, 141, 142, 143, 147, 148, 
	149, 153, 154, 155, 159, 160, 161, 166, 
	172, 177, 183, 188, 194, 199, 205, 210, 
	216, 219, 220, 223, 226, 227, 230, 233, 
	234, 237, 240, 241, 244, 247, 248, 249, 
	250, 251, 255, 256, 257, 261, 262, 263, 
	267, 268, 269, 274, 280, 285, 291, 296, 
	302, 307, 313, 318, 321, 322, 325, 328, 
	329, 332, 335, 336, 339, 342, 343, 346, 
	349, 350, 351, 352, 353, 357, 358, 359, 
	363, 364, 365, 369, 370, 371, 376, 382, 
	387, 393, 398, 404, 409, 415, 420, 426, 
	432, 438, 441, 444, 447, 450, 451, 454, 
	457, 458, 461, 464, 465, 468, 469, 470, 
	471, 472, 476, 477, 478, 482, 483, 484, 
	488, 489, 490, 505, 516, 525, 533, 540, 
	551, 560, 568, 575, 586, 595, 603, 610, 
	621, 630, 638, 645, 656, 665, 673, 678, 
	681, 683, 684, 685, 692, 695, 697, 700, 
	705, 712, 720, 727, 733, 741, 748, 754, 
	762, 769, 775, 781, 786, 790, 794, 801, 
	809, 818, 828, 837, 842, 848, 854, 862, 
	871, 881, 890, 895, 901, 907, 915, 924, 
	934, 943, 948, 954, 960, 968, 977, 987, 
	996, 1001, 1007, 1013, 1021, 1030, 1040, 1049, 
	1057, 1064, 1071, 1081, 1089, 1096, 1103, 1113, 
	1121, 1128, 1135, 1145, 1153, 1160, 1167, 1177, 
	1185, 1192, 1197, 1200, 1202, 1203, 1204, 1211, 
	1214, 1216, 1219, 1224, 1231, 1239, 1246, 1252, 
	1260, 1267, 1273, 1281, 1288, 1294, 1300, 1305, 
	1309, 1313, 1321, 1329, 1338, 1347, 1352, 1358, 
	1364, 1372, 1380, 1389, 1398, 1403, 1409, 1415, 
	1423, 1431, 1440, 1449, 1454, 1460, 1466, 1474, 
	1482, 1491, 1500, 1505, 1511, 1517, 1522, 1530, 
	1538, 1546, 1553, 1560, 1570, 1578, 1585, 1592, 
	1602, 1610, 1617, 1624, 1634, 1642, 1649, 1656, 
	1666, 1674, 1681, 1686, 1689, 1691, 1692, 1693, 
	1700, 1703, 1705, 1708, 1713, 1720, 1728, 1735, 
	1741, 1749, 1756, 1762, 1770, 1777, 1783, 1789, 
	1794, 1798, 1802, 1810, 1818, 1827, 1836, 1841, 
	1847, 1853, 1861, 1869, 1878, 1887, 1892, 1898, 
	1904, 1912, 1920, 1929, 1938, 1943, 1949, 1955, 
	1963, 1971, 1980, 1989, 1994, 2000, 2006, 2014, 
	2020, 2028, 2033, 2042, 2050, 2057, 2064, 2074, 
	2082, 2089, 2096, 2106, 2114, 2121, 2128, 2138, 
	2146, 2153, 2160, 2170, 2178, 2185, 2190, 2193, 
	2195, 2196, 2197, 2204, 2207, 2209, 2212, 2217, 
	2224, 2232, 2239, 2245, 2253, 2260, 2266, 2274, 
	2281, 2287, 2293, 2298, 2302, 2306, 2314, 2322, 
	2331, 2340, 2345, 2351, 2357, 2365, 2373, 2382, 
	2391, 2396, 2402, 2408, 2416, 2424, 2433, 2442, 
	2447, 2453, 2459, 2467, 2475, 2484, 2493, 2498, 
	2504, 2510, 2518, 2526, 2540, 2551, 2565, 2573, 
	2580, 2590, 2598, 2605, 2607, 2608, 2609, 2617, 
	2626, 2636, 2644, 2651, 2657, 2665, 2672, 2678, 
	2686, 2693, 2699, 2705, 2710, 2713, 2720, 2723, 
	2725, 2728, 2733
};

static const unsigned char _indic_syllable_machine_trans_keys[] = {
	1u, 2u, 16u, 13u, 7u, 5u, 6u, 7u, 
	5u, 6u, 7u, 7u, 5u, 6u, 7u, 5u, 
	6u, 7u, 7u, 5u, 6u, 7u, 5u, 6u, 
	7u, 7u, 5u, 6u, 7u, 5u, 6u, 7u, 
	4u, 6u, 16u, 4u, 7u, 5u, 6u, 6u, 
	16u, 4u, 7u, 5u, 6u, 6u, 16u, 4u, 
	7u, 5u, 6u, 6u, 16u, 4u, 7u, 14u, 
	5u, 6u, 4u, 7u, 13u, 14u, 5u, 6u, 
	4u, 7u, 14u, 5u, 6u, 4u, 7u, 13u, 
	14u, 5u, 6u, 4u, 7u, 14u, 5u, 6u, 
	4u, 7u, 13u, 14u, 5u, 6u, 4u, 7u, 
	14u, 5u, 6u, 4u, 7u, 13u, 14u, 5u, 
	6u, 4u, 7u, 14u, 5u, 6u, 4u, 7u, 
	13u, 14u, 5u, 6u, 1u, 2u, 16u, 13u, 
	7u, 5u, 6u, 7u, 5u, 6u, 7u, 7u, 
	5u, 6u, 7u, 5u, 6u, 7u, 7u, 5u, 
	6u, 7u, 5u, 6u, 7u, 7u, 5u, 6u, 
	7u, 5u, 6u, 7u, 4u, 6u, 16u, 4u, 
	7u, 5u, 6u, 6u, 16u, 4u, 7u, 5u, 
	6u, 6u, 16u, 4u, 7u, 5u, 6u, 6u, 
	16u, 4u, 7u, 14u, 5u, 6u, 4u, 7u, 
	13u, 14u, 5u, 6u, 4u, 7u, 14u, 5u, 
	6u, 4u, 7u, 13u, 14u, 5u, 6u, 4u, 
	7u, 14u, 5u, 6u, 4u, 7u, 13u, 14u, 
	5u, 6u, 4u, 7u, 14u, 5u, 6u, 4u, 
	7u, 13u, 14u, 5u, 6u, 4u, 7u, 14u, 
	5u, 6u, 4u, 7u, 13u, 14u, 5u, 6u, 
	1u, 2u, 16u, 13u, 7u, 5u, 6u, 7u, 
	5u, 6u, 7u, 7u, 5u, 6u, 7u, 5u, 
	6u, 7u, 7u, 5u, 6u, 7u, 5u, 6u, 
	7u, 7u, 5u, 6u, 7u, 5u, 6u, 7u, 
	4u, 6u, 16u, 4u, 7u, 5u, 6u, 6u, 
	16u, 4u, 7u, 5u, 6u, 6u, 16u, 4u, 
	7u, 5u, 6u, 6u, 16u, 4u, 7u, 14u, 
	5u, 6u, 4u, 7u, 13u, 14u, 5u, 6u, 
	4u, 7u, 14u, 5u, 6u, 4u, 7u, 13u, 
	14u, 5u, 6u, 4u, 7u, 14u, 5u, 6u, 
	4u, 7u, 13u, 14u, 5u, 6u, 4u, 7u, 
	14u, 5u, 6u, 4u, 7u, 13u, 14u, 5u, 
	6u, 4u, 7u, 14u, 5u, 6u, 1u, 2u, 
	16u, 13u, 7u, 5u, 6u, 7u, 5u, 6u, 
	7u, 7u, 5u, 6u, 7u, 5u, 6u, 7u, 
	7u, 5u, 6u, 7u, 5u, 6u, 7u, 7u, 
	5u, 6u, 7u, 5u, 6u, 7u, 4u, 6u, 
	16u, 4u, 7u, 5u, 6u, 6u, 16u, 4u, 
	7u, 5u, 6u, 6u, 16u, 4u, 7u, 5u, 
	6u, 6u, 16u, 4u, 7u, 14u, 5u, 6u, 
	4u, 7u, 13u, 14u, 5u, 6u, 4u, 7u, 
	14u, 5u, 6u, 4u, 7u, 13u, 14u, 5u, 
	6u, 4u, 7u, 14u, 5u, 6u, 4u, 7u, 
	13u, 14u, 5u, 6u, 4u, 7u, 14u, 5u, 
	6u, 4u, 7u, 13u, 14u, 5u, 6u, 4u, 
	7u, 14u, 5u, 6u, 4u, 7u, 13u, 14u, 
	5u, 6u, 4u, 7u, 13u, 14u, 5u, 6u, 
	4u, 7u, 13u, 14u, 5u, 6u, 7u, 5u, 
	6u, 7u, 5u, 6u, 7u, 5u, 6u, 7u, 
	5u, 6u, 7u, 7u, 5u, 6u, 7u, 5u, 
	6u, 7u, 7u, 5u, 6u, 7u, 5u, 6u, 
	7u, 1u, 2u, 16u, 13u, 4u, 6u, 16u, 
	4u, 7u, 5u, 6u, 6u, 16u, 4u, 7u, 
	5u, 6u, 6u, 16u, 4u, 7u, 5u, 6u, 
	6u, 16u, 1u, 2u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 13u, 14u, 15u, 16u, 11u, 
	12u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 13u, 14u, 17u, 3u, 4u, 7u, 8u, 
	9u, 10u, 14u, 5u, 6u, 4u, 7u, 8u, 
	9u, 10u, 14u, 5u, 6u, 1u, 5u, 6u, 
	8u, 9u, 14u, 16u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 13u, 14u, 17u, 3u, 
	4u, 7u, 8u, 9u, 10u, 14u, 5u, 6u, 
	4u, 7u, 8u, 9u, 10u, 14u, 5u, 6u, 
	1u, 5u, 6u, 8u, 9u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 10u, 
	14u, 5u, 6u, 4u, 7u, 8u, 9u, 10u, 
	14u, 5u, 6u, 1u, 5u, 6u, 8u, 9u, 
	14u, 16u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 10u, 13u, 14u, 17u, 3u, 4u, 7u, 
	8u, 9u, 10u, 14u, 5u, 6u, 4u, 7u, 
	8u, 9u, 10u, 14u, 5u, 6u, 1u, 5u, 
	6u, 8u, 9u, 14u, 16u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 10u, 13u, 14u, 17u, 
	3u, 4u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 4u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 5u, 6u, 8u, 9u, 14u, 8u, 9u, 
	14u, 5u, 9u, 9u, 9u, 3u, 5u, 6u, 
	8u, 9u, 13u, 17u, 3u, 8u, 9u, 8u, 
	9u, 3u, 8u, 9u, 3u, 5u, 8u, 9u, 
	13u, 3u, 7u, 8u, 9u, 14u, 5u, 6u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 14u, 
	4u, 5u, 6u, 7u, 8u, 9u, 14u, 7u, 
	8u, 9u, 14u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 14u, 4u, 5u, 6u, 
	7u, 8u, 9u, 14u, 7u, 8u, 9u, 14u, 
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	14u, 7u, 8u, 9u, 14u, 5u, 6u, 3u, 
	4u, 6u, 8u, 9u, 14u, 4u, 6u, 8u, 
	9u, 14u, 6u, 8u, 9u, 14u, 3u, 8u, 
	9u, 14u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 2u, 5u, 6u, 8u, 9u, 14u, 
	16u, 3u, 4u, 7u, 8u, 9u, 10u, 14u, 
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 10u, 13u, 14u, 1u, 3u, 7u, 8u, 
	9u, 14u, 16u, 5u, 6u, 1u, 8u, 9u, 
	14u, 16u, 1u, 6u, 8u, 9u, 14u, 16u, 
	1u, 3u, 8u, 9u, 14u, 16u, 1u, 2u, 
	5u, 6u, 8u, 9u, 14u, 16u, 3u, 4u, 
	7u, 8u, 9u, 10u, 14u, 5u, 6u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 10u, 13u, 
	14u, 1u, 3u, 7u, 8u, 9u, 14u, 16u, 
	5u, 6u, 1u, 8u, 9u, 14u, 16u, 1u, 
	6u, 8u, 9u, 14u, 16u, 1u, 3u, 8u, 
	9u, 14u, 16u, 1u, 2u, 5u, 6u, 8u, 
	9u, 14u, 16u, 3u, 4u, 7u, 8u, 9u, 
	10u, 14u, 5u, 6u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 13u, 14u, 1u, 3u, 
	7u, 8u, 9u, 14u, 16u, 5u, 6u, 1u, 
	8u, 9u, 14u, 16u, 1u, 6u, 8u, 9u, 
	14u, 16u, 1u, 3u, 8u, 9u, 14u, 16u, 
	1u, 2u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 7u, 8u, 9u, 10u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	10u, 13u, 14u, 1u, 3u, 7u, 8u, 9u, 
	14u, 16u, 5u, 6u, 1u, 8u, 9u, 14u, 
	16u, 1u, 6u, 8u, 9u, 14u, 16u, 1u, 
	3u, 8u, 9u, 14u, 16u, 1u, 2u, 5u, 
	6u, 8u, 9u, 14u, 16u, 3u, 4u, 7u, 
	8u, 9u, 10u, 14u, 5u, 6u, 3u, 4u, 
	5u, 6u, 7u, 8u, 9u, 10u, 13u, 14u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	14u, 4u, 5u, 6u, 7u, 8u, 9u, 14u, 
	1u, 5u, 6u, 8u, 9u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 13u, 14u, 
	17u, 3u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 4u, 7u, 8u, 9u, 14u, 5u, 6u, 
	1u, 5u, 6u, 8u, 9u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 13u, 14u, 
	17u, 3u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 4u, 7u, 8u, 9u, 14u, 5u, 6u, 
	1u, 5u, 6u, 8u, 9u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 13u, 14u, 
	17u, 3u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 4u, 7u, 8u, 9u, 14u, 5u, 6u, 
	1u, 5u, 6u, 8u, 9u, 14u, 16u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 13u, 14u, 
	17u, 3u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 4u, 7u, 8u, 9u, 14u, 5u, 6u, 
	5u, 6u, 8u, 9u, 14u, 8u, 9u, 14u, 
	5u, 9u, 9u, 9u, 3u, 5u, 6u, 8u, 
	9u, 13u, 17u, 3u, 8u, 9u, 8u, 9u, 
	3u, 8u, 9u, 3u, 5u, 8u, 9u, 13u, 
	3u, 7u, 8u, 9u, 14u, 5u, 6u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 14u, 4u, 
	5u, 6u, 7u, 8u, 9u, 14u, 7u, 8u, 
	9u, 14u, 5u, 6u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 14u, 4u, 5u, 6u, 7u, 
	8u, 9u, 14u, 7u, 8u, 9u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	14u, 4u, 5u, 6u, 7u, 8u, 9u, 14u, 
	7u, 8u, 9u, 14u, 5u, 6u, 3u, 4u, 
	6u, 8u, 9u, 14u, 4u, 6u, 8u, 9u, 
	14u, 6u, 8u, 9u, 14u, 3u, 8u, 9u, 
	14u, 1u, 2u, 5u, 6u, 8u, 9u, 14u, 
	16u, 3u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	13u, 14u, 1u, 3u, 7u, 8u, 9u, 14u, 
	16u, 5u, 6u, 1u, 8u, 9u, 14u, 16u, 
	1u, 6u, 8u, 9u, 14u, 16u, 1u, 3u, 
	8u, 9u, 14u, 16u, 1u, 2u, 5u, 6u, 
	8u, 9u, 14u, 16u, 3u, 4u, 7u, 8u, 
	9u, 14u, 5u, 6u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 13u, 14u, 1u, 3u, 7u, 
	8u, 9u, 14u, 16u, 5u, 6u, 1u, 8u, 
	9u, 14u, 16u, 1u, 6u, 8u, 9u, 14u, 
	16u, 1u, 3u, 8u, 9u, 14u, 16u, 1u, 
	2u, 5u, 6u, 8u, 9u, 14u, 16u, 3u, 
	4u, 7u, 8u, 9u, 14u, 5u, 6u, 3u, 
	4u, 5u, 6u, 7u, 8u, 9u, 13u, 14u, 
	1u, 3u, 7u, 8u, 9u, 14u, 16u, 5u, 
	6u, 1u, 8u, 9u, 14u, 16u, 1u, 6u, 
	8u, 9u, 14u, 16u, 1u, 3u, 8u, 9u, 
	14u, 16u, 1u, 2u, 5u, 6u, 8u, 9u, 
	14u, 16u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 13u, 14u, 1u, 3u, 7u, 8u, 9u, 
	14u, 16u, 5u, 6u, 1u, 8u, 9u, 14u, 
	16u, 1u, 6u, 8u, 9u, 14u, 16u, 1u, 
	3u, 8u, 9u, 14u, 16u, 4u, 7u, 14u, 
	5u, 6u, 1u, 2u, 5u, 6u, 8u, 9u, 
	14u, 16u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 14u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 5u, 6u, 8u, 9u, 14u, 8u, 9u, 
	14u, 5u, 9u, 9u, 9u, 3u, 5u, 6u, 
	8u, 9u, 13u, 17u, 3u, 8u, 9u, 8u, 
	9u, 3u, 8u, 9u, 3u, 5u, 8u, 9u, 
	13u, 3u, 7u, 8u, 9u, 14u, 5u, 6u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 14u, 
	4u, 5u, 6u, 7u, 8u, 9u, 14u, 7u, 
	8u, 9u, 14u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 14u, 4u, 5u, 6u, 
	7u, 8u, 9u, 14u, 7u, 8u, 9u, 14u, 
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	14u, 7u, 8u, 9u, 14u, 5u, 6u, 3u, 
	4u, 6u, 8u, 9u, 14u, 4u, 6u, 8u, 
	9u, 14u, 6u, 8u, 9u, 14u, 3u, 8u, 
	9u, 14u, 1u, 2u, 5u, 6u, 8u, 9u, 
	14u, 16u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 13u, 14u, 1u, 3u, 7u, 8u, 9u, 
	14u, 16u, 5u, 6u, 1u, 8u, 9u, 14u, 
	16u, 1u, 6u, 8u, 9u, 14u, 16u, 1u, 
	3u, 8u, 9u, 14u, 16u, 1u, 2u, 5u, 
	6u, 8u, 9u, 14u, 16u, 3u, 4u, 7u, 
	8u, 9u, 14u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 13u, 14u, 1u, 3u, 
	7u, 8u, 9u, 14u, 16u, 5u, 6u, 1u, 
	8u, 9u, 14u, 16u, 1u, 6u, 8u, 9u, 
	14u, 16u, 1u, 3u, 8u, 9u, 14u, 16u, 
	1u, 2u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 7u, 8u, 9u, 14u, 5u, 6u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 1u, 3u, 7u, 8u, 9u, 14u, 16u, 
	5u, 6u, 1u, 8u, 9u, 14u, 16u, 1u, 
	6u, 8u, 9u, 14u, 16u, 1u, 3u, 8u, 
	9u, 14u, 16u, 1u, 2u, 5u, 6u, 8u, 
	9u, 14u, 16u, 3u, 4u, 7u, 8u, 9u, 
	14u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 13u, 14u, 1u, 3u, 7u, 8u, 
	9u, 14u, 16u, 5u, 6u, 1u, 8u, 9u, 
	14u, 16u, 1u, 6u, 8u, 9u, 14u, 16u, 
	1u, 3u, 8u, 9u, 14u, 16u, 1u, 2u, 
	5u, 6u, 8u, 9u, 14u, 16u, 4u, 7u, 
	13u, 14u, 5u, 6u, 3u, 4u, 7u, 8u, 
	9u, 14u, 5u, 6u, 4u, 7u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	13u, 14u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 1u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 17u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 5u, 6u, 8u, 9u, 14u, 8u, 9u, 
	14u, 5u, 9u, 9u, 9u, 3u, 5u, 6u, 
	8u, 9u, 13u, 17u, 3u, 8u, 9u, 8u, 
	9u, 3u, 8u, 9u, 3u, 5u, 8u, 9u, 
	13u, 3u, 7u, 8u, 9u, 14u, 5u, 6u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 14u, 
	4u, 5u, 6u, 7u, 8u, 9u, 14u, 7u, 
	8u, 9u, 14u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 14u, 4u, 5u, 6u, 
	7u, 8u, 9u, 14u, 7u, 8u, 9u, 14u, 
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 14u, 4u, 5u, 6u, 7u, 8u, 9u, 
	14u, 7u, 8u, 9u, 14u, 5u, 6u, 3u, 
	4u, 6u, 8u, 9u, 14u, 4u, 6u, 8u, 
	9u, 14u, 6u, 8u, 9u, 14u, 3u, 8u, 
	9u, 14u, 1u, 2u, 5u, 6u, 8u, 9u, 
	14u, 16u, 3u, 4u, 7u, 8u, 9u, 14u, 
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u, 
	9u, 13u, 14u, 1u, 3u, 7u, 8u, 9u, 
	14u, 16u, 5u, 6u, 1u, 8u, 9u, 14u, 
	16u, 1u, 6u, 8u, 9u, 14u, 16u, 1u, 
	3u, 8u, 9u, 14u, 16u, 1u, 2u, 5u, 
	6u, 8u, 9u, 14u, 16u, 3u, 4u, 7u, 
	8u, 9u, 14u, 5u, 6u, 3u, 4u, 5u, 
	6u, 7u, 8u, 9u, 13u, 14u, 1u, 3u, 
	7u, 8u, 9u, 14u, 16u, 5u, 6u, 1u, 
	8u, 9u, 14u, 16u, 1u, 6u, 8u, 9u, 
	14u, 16u, 1u, 3u, 8u, 9u, 14u, 16u, 
	1u, 2u, 5u, 6u, 8u, 9u, 14u, 16u, 
	3u, 4u, 7u, 8u, 9u, 14u, 5u, 6u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 1u, 3u, 7u, 8u, 9u, 14u, 16u, 
	5u, 6u, 1u, 8u, 9u, 14u, 16u, 1u, 
	6u, 8u, 9u, 14u, 16u, 1u, 3u, 8u, 
	9u, 14u, 16u, 1u, 2u, 5u, 6u, 8u, 
	9u, 14u, 16u, 3u, 4u, 7u, 8u, 9u, 
	14u, 5u, 6u, 3u, 4u, 5u, 6u, 7u, 
	8u, 9u, 13u, 14u, 1u, 3u, 7u, 8u, 
	9u, 14u, 16u, 5u, 6u, 1u, 8u, 9u, 
	14u, 16u, 1u, 6u, 8u, 9u, 14u, 16u, 
	1u, 3u, 8u, 9u, 14u, 16u, 1u, 2u, 
	5u, 6u, 8u, 9u, 14u, 16u, 3u, 4u, 
	7u, 8u, 9u, 14u, 5u, 6u, 1u, 2u, 
	3u, 4u, 5u, 6u, 7u, 8u, 9u, 13u, 
	14u, 16u, 11u, 12u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 10u, 13u, 14u, 17u, 1u, 
	2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	13u, 14u, 16u, 11u, 12u, 4u, 7u, 8u, 
	9u, 13u, 14u, 5u, 6u, 1u, 2u, 6u, 
	8u, 9u, 14u, 16u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 13u, 14u, 17u, 3u, 4u, 
	7u, 8u, 9u, 14u, 5u, 6u, 4u, 7u, 
	8u, 9u, 14u, 5u, 6u, 5u, 9u, 9u, 
	9u, 3u, 4u, 7u, 8u, 9u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	13u, 14u, 1u, 3u, 4u, 7u, 8u, 9u, 
	14u, 16u, 5u, 6u, 3u, 4u, 5u, 6u, 
	7u, 8u, 9u, 14u, 4u, 5u, 6u, 7u, 
	8u, 9u, 14u, 7u, 8u, 9u, 14u, 5u, 
	6u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 
	14u, 4u, 5u, 6u, 7u, 8u, 9u, 14u, 
	7u, 8u, 9u, 14u, 5u, 6u, 3u, 4u, 
	5u, 6u, 7u, 8u, 9u, 14u, 4u, 5u, 
	6u, 7u, 8u, 9u, 14u, 7u, 8u, 9u, 
	14u, 5u, 6u, 3u, 4u, 6u, 8u, 9u, 
	14u, 4u, 6u, 8u, 9u, 14u, 8u, 9u, 
	14u, 3u, 5u, 6u, 8u, 9u, 13u, 17u, 
	3u, 8u, 9u, 8u, 9u, 3u, 8u, 9u, 
	3u, 5u, 8u, 9u, 13u, 1u, 2u, 5u, 
	6u, 8u, 9u, 14u, 16u, 0
};

static const char _indic_syllable_machine_single_lengths[] = {
	3, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 3, 4, 3, 4, 3, 4, 
	3, 4, 3, 4, 3, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	2, 1, 1, 2, 1, 1, 3, 4, 
	3, 4, 3, 4, 3, 4, 3, 4, 
	3, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 3, 4, 3, 4, 3, 4, 
	3, 4, 3, 3, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 1, 1, 2, 
	1, 1, 2, 1, 1, 3, 4, 3, 
	4, 3, 4, 3, 4, 3, 4, 4, 
	4, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 3, 1, 1, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	1, 1, 13, 11, 7, 6, 7, 11, 
	7, 6, 7, 11, 7, 6, 7, 11, 
	7, 6, 7, 11, 7, 6, 5, 3, 
	2, 1, 1, 7, 3, 2, 3, 5, 
	5, 8, 7, 4, 8, 7, 4, 8, 
	7, 4, 6, 5, 4, 4, 5, 8, 
	7, 10, 7, 5, 6, 6, 8, 7, 
	10, 7, 5, 6, 6, 8, 7, 10, 
	7, 5, 6, 6, 8, 7, 10, 7, 
	5, 6, 6, 8, 7, 10, 9, 8, 
	7, 7, 10, 6, 5, 7, 10, 6, 
	5, 7, 10, 6, 5, 7, 10, 6, 
	5, 5, 3, 2, 1, 1, 7, 3, 
	2, 3, 5, 5, 8, 7, 4, 8, 
	7, 4, 8, 7, 4, 6, 5, 4, 
	4, 8, 6, 9, 7, 5, 6, 6, 
	8, 6, 9, 7, 5, 6, 6, 8, 
	6, 9, 7, 5, 6, 6, 8, 6, 
	9, 7, 5, 6, 6, 3, 8, 8, 
	6, 5, 7, 10, 6, 5, 7, 10, 
	6, 5, 7, 10, 6, 5, 7, 10, 
	6, 5, 5, 3, 2, 1, 1, 7, 
	3, 2, 3, 5, 5, 8, 7, 4, 
	8, 7, 4, 8, 7, 4, 6, 5, 
	4, 4, 8, 6, 9, 7, 5, 6, 
	6, 8, 6, 9, 7, 5, 6, 6, 
	8, 6, 9, 7, 5, 6, 6, 8, 
	6, 9, 7, 5, 6, 6, 8, 4, 
	6, 3, 9, 6, 5, 7, 10, 6, 
	5, 7, 10, 6, 5, 7, 10, 6, 
	5, 7, 10, 6, 5, 5, 3, 2, 
	1, 1, 7, 3, 2, 3, 5, 5, 
	8, 7, 4, 8, 7, 4, 8, 7, 
	4, 6, 5, 4, 4, 8, 6, 9, 
	7, 5, 6, 6, 8, 6, 9, 7, 
	5, 6, 6, 8, 6, 9, 7, 5, 
	6, 6, 8, 6, 9, 7, 5, 6, 
	6, 8, 6, 12, 11, 12, 6, 7, 
	10, 6, 5, 2, 1, 1, 6, 9, 
	8, 8, 7, 4, 8, 7, 4, 8, 
	7, 4, 6, 5, 3, 7, 3, 2, 
	3, 5, 8
};

static const char _indic_syllable_machine_range_lengths[] = {
	0, 0, 1, 1, 0, 1, 1, 0, 
	1, 1, 0, 1, 1, 0, 0, 0, 
	0, 1, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 0, 0, 1, 1, 
	0, 1, 1, 0, 1, 1, 0, 1, 
	1, 0, 0, 0, 0, 1, 0, 0, 
	1, 0, 0, 1, 0, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	0, 0, 1, 1, 0, 1, 1, 0, 
	1, 1, 0, 1, 1, 0, 0, 0, 
	0, 1, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 0, 1, 1, 0, 
	1, 1, 0, 1, 1, 0, 1, 1, 
	0, 0, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 0, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 0, 1, 1, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 1, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 0, 0, 1, 0, 0, 1, 0, 
	0, 1, 0, 0, 0, 0, 1, 0, 
	1, 0, 1, 0, 0, 0, 0, 1, 
	0, 1, 0, 0, 0, 0, 1, 0, 
	1, 0, 0, 0, 0, 1, 0, 1, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 1, 
	1, 0, 0, 1, 1, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 0, 0, 1, 0, 
	0, 1, 0, 0, 1, 0, 0, 0, 
	0, 0, 1, 0, 1, 0, 0, 0, 
	0, 1, 0, 1, 0, 0, 0, 0, 
	1, 0, 1, 0, 0, 0, 0, 1, 
	0, 1, 0, 0, 0, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 0, 0, 1, 
	0, 0, 1, 0, 0, 1, 0, 0, 
	0, 0, 0, 1, 0, 1, 0, 0, 
	0, 0, 1, 0, 1, 0, 0, 0, 
	0, 1, 0, 1, 0, 0, 0, 0, 
	1, 0, 1, 0, 0, 0, 0, 1, 
	1, 1, 0, 1, 1, 0, 0, 1, 
	1, 0, 0, 1, 1, 0, 0, 1, 
	1, 0, 0, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 1, 0, 0, 1, 0, 0, 
	1, 0, 0, 0, 0, 0, 1, 0, 
	1, 0, 0, 0, 0, 1, 0, 1, 
	0, 0, 0, 0, 1, 0, 1, 0, 
	0, 0, 0, 1, 0, 1, 0, 0, 
	0, 0, 1, 1, 0, 1, 1, 0, 
	0, 1, 1, 0, 0, 0, 1, 0, 
	1, 0, 0, 1, 0, 0, 1, 0, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};

static const short _indic_syllable_machine_index_offsets[] = {
	0, 4, 6, 9, 12, 14, 17, 20, 
	22, 25, 28, 30, 33, 36, 38, 40, 
	42, 44, 48, 50, 52, 56, 58, 60, 
	64, 66, 68, 73, 79, 84, 90, 95, 
	101, 106, 112, 117, 123, 127, 129, 132, 
	135, 137, 140, 143, 145, 148, 151, 153, 
	156, 159, 161, 163, 165, 167, 171, 173, 
	175, 179, 181, 183, 187, 189, 191, 196, 
	202, 207, 213, 218, 224, 229, 235, 240, 
	246, 250, 252, 255, 258, 260, 263, 266, 
	268, 271, 274, 276, 279, 282, 284, 286, 
	288, 290, 294, 296, 298, 302, 304, 306, 
	310, 312, 314, 319, 325, 330, 336, 341, 
	347, 352, 358, 363, 367, 369, 372, 375, 
	377, 380, 383, 385, 388, 391, 393, 396, 
	399, 401, 403, 405, 407, 411, 413, 415, 
	419, 421, 423, 427, 429, 431, 436, 442, 
	447, 453, 458, 464, 469, 475, 480, 486, 
	492, 498, 501, 504, 507, 510, 512, 515, 
	518, 520, 523, 526, 528, 532, 534, 536, 
	538, 540, 544, 546, 548, 552, 554, 556, 
	560, 562, 564, 579, 591, 600, 608, 616, 
	628, 637, 645, 653, 665, 674, 682, 690, 
	702, 711, 719, 727, 739, 748, 756, 762, 
	766, 769, 771, 773, 781, 785, 788, 792, 
	798, 805, 814, 822, 828, 837, 845, 851, 
	860, 868, 874, 881, 887, 892, 897, 904, 
	913, 922, 933, 942, 948, 955, 962, 971, 
	980, 991, 1000, 1006, 1013, 1020, 1029, 1038, 
	1049, 1058, 1064, 1071, 1078, 1087, 1096, 1107, 
	1116, 1122, 1129, 1136, 1145, 1154, 1165, 1175, 
	1184, 1192, 1200, 1211, 1219, 1226, 1234, 1245, 
	1253, 1260, 1268, 1279, 1287, 1294, 1302, 1313, 
	1321, 1328, 1334, 1338, 1341, 1343, 1345, 1353, 
	1357, 1360, 1364, 1370, 1377, 1386, 1394, 1400, 
	1409, 1417, 1423, 1432, 1440, 1446, 1453, 1459, 
	1464, 1469, 1478, 1486, 1496, 1505, 1511, 1518, 
	1525, 1534, 1542, 1552, 1561, 1567, 1574, 1581, 
	1590, 1598, 1608, 1617, 1623, 1630, 1637, 1646, 
	1654, 1664, 1673, 1679, 1686, 1693, 1698, 1707, 
	1716, 1724, 1731, 1739, 1750, 1758, 1765, 1773, 
	1784, 1792, 1799, 1807, 1818, 1826, 1833, 1841, 
	1852, 1860, 1867, 1873, 1877, 1880, 1882, 1884, 
	1892, 1896, 1899, 1903, 1909, 1916, 1925, 1933, 
	1939, 1948, 1956, 1962, 1971, 1979, 1985, 1992, 
	1998, 2003, 2008, 2017, 2025, 2035, 2044, 2050, 
	2057, 2064, 2073, 2081, 2091, 2100, 2106, 2113, 
	2120, 2129, 2137, 2147, 2156, 2162, 2169, 2176, 
	2185, 2193, 2203, 2212, 2218, 2225, 2232, 2241, 
	2247, 2255, 2260, 2270, 2278, 2285, 2293, 2304, 
	2312, 2319, 2327, 2338, 2346, 2353, 2361, 2372, 
	2380, 2387, 2395, 2406, 2414, 2421, 2427, 2431, 
	2434, 2436, 2438, 2446, 2450, 2453, 2457, 2463, 
	2470, 2479, 2487, 2493, 2502, 2510, 2516, 2525, 
	2533, 2539, 2546, 2552, 2557, 2562, 2571, 2579, 
	2589, 2598, 2604, 2611, 2618, 2627, 2635, 2645, 
	2654, 2660, 2667, 2674, 2683, 2691, 2701, 2710, 
	2716, 2723, 2730, 2739, 2747, 2757, 2766, 2772, 
	2779, 2786, 2795, 2803, 2817, 2829, 2843, 2851, 
	2859, 2870, 2878, 2885, 2888, 2890, 2892, 2900, 
	2910, 2920, 2929, 2937, 2943, 2952, 2960, 2966, 
	2975, 2983, 2989, 2996, 3002, 3006, 3014, 3018, 
	3021, 3025, 3031
};

static const short _indic_syllable_machine_indicies[] = {
	1, 2, 1, 0, 3, 0, 5, 4, 
	0, 5, 6, 0, 5, 0, 8, 7, 
	0, 8, 9, 0, 8, 0, 11, 10, 
	0, 11, 12, 0, 11, 0, 14, 13, 
	0, 14, 15, 0, 14, 0, 16, 0, 
	17, 0, 18, 0, 19, 14, 13, 0, 
	20, 0, 21, 0, 22, 11, 10, 0, 
	23, 0, 24, 0, 25, 8, 7, 0, 
	26, 0, 27, 0, 28, 5, 28, 4, 
	0, 28, 5, 29, 28, 4, 0, 30, 
	5, 30, 4, 0, 30, 5, 31, 30, 
	4, 0, 32, 5, 32, 4, 0, 32, 
	5, 33, 32, 4, 0, 34, 5, 34, 
	4, 0, 34, 5, 35, 34, 4, 0, 
	36, 5, 36, 4, 0, 36, 5, 37, 
	36, 4, 0, 39, 40, 39, 38, 41, 
	38, 43, 42, 38, 43, 44, 38, 43, 
	38, 46, 45, 38, 46, 47, 38, 46, 
	38, 49, 48, 38, 49, 50, 38, 49, 
	38, 52, 51, 38, 52, 53, 38, 52, 
	38, 54, 38, 55, 38, 56, 38, 57, 
	52, 51, 38, 58, 38, 59, 38, 60, 
	49, 48, 38, 61, 38, 62, 38, 63, 
	46, 45, 38, 64, 38, 65, 38, 66, 
	43, 66, 42, 38, 66, 43, 67, 66, 
	42, 38, 68, 43, 68, 42, 38, 68, 
	43, 69, 68, 42, 38, 70, 43, 70, 
	42, 38, 70, 43, 71, 70, 42, 38, 
	72, 43, 72, 42, 38, 72, 43, 73, 
	72, 42, 38, 74, 43, 74, 42, 38, 
	74, 43, 75, 74, 42, 38, 77, 78, 
	77, 76, 79, 76, 81, 80, 76, 81, 
	83, 82, 81, 82, 85, 84, 76, 85, 
	86, 76, 85, 76, 88, 87, 76, 88, 
	89, 76, 88, 76, 91, 90, 76, 91, 
	92, 76, 91, 76, 93, 76, 94, 76, 
	95, 76, 96, 91, 90, 76, 97, 76, 
	98, 76, 99, 88, 87, 76, 100, 76, 
	101, 76, 102, 85, 84, 76, 103, 76, 
	104, 76, 105, 81, 105, 80, 76, 105, 
	81, 106, 105, 80, 76, 107, 81, 107, 
	80, 76, 107, 81, 108, 107, 80, 76, 
	109, 81, 109, 80, 76, 109, 81, 110, 
	109, 80, 76, 111, 81, 111, 80, 82, 
	111, 81, 112, 111, 80, 76, 113, 81, 
	113, 80, 76, 115, 116, 115, 114, 117, 
	114, 119, 118, 114, 119, 120, 114, 119, 
	114, 122, 121, 114, 122, 123, 114, 122, 
	114, 125, 124, 114, 125, 126, 114, 125, 
	114, 128, 127, 114, 128, 129, 114, 128, 
	114, 130, 114, 131, 114, 132, 114, 133, 
	128, 127, 114, 134, 114, 135, 114, 136, 
	125, 124, 114, 137, 114, 138, 114, 139, 
	122, 121, 114, 140, 114, 141, 114, 142, 
	119, 142, 118, 114, 142, 119, 143, 142, 
	118, 114, 144, 119, 144, 118, 114, 144, 
	119, 145, 144, 118, 114, 146, 119, 146, 
	118, 114, 146, 119, 147, 146, 118, 114, 
	148, 119, 148, 118, 114, 148, 119, 149, 
	148, 118, 114, 150, 119, 150, 118, 114, 
	150, 119, 151, 150, 118, 114, 113, 81, 
	152, 113, 80, 76, 111, 81, 153, 111, 
	80, 0, 155, 154, 0, 155, 6, 0, 
	157, 156, 0, 157, 158, 0, 157, 0, 
	160, 159, 0, 160, 161, 0, 160, 0, 
	163, 162, 0, 163, 164, 0, 163, 0, 
	165, 166, 165, 0, 167, 0, 168, 0, 
	169, 0, 170, 0, 171, 163, 162, 0, 
	172, 0, 173, 0, 174, 160, 159, 0, 
	175, 0, 176, 0, 177, 157, 156, 0, 
	178, 0, 179, 0, 181, 182, 183, 184, 
	185, 186, 81, 187, 188, 152, 190, 191, 
	192, 189, 180, 194, 195, 196, 197, 5, 
	198, 199, 200, 37, 201, 181, 193, 202, 
	195, 5, 198, 199, 200, 201, 203, 193, 
	195, 5, 198, 199, 200, 201, 203, 193, 
	204, 18, 205, 198, 199, 206, 204, 193, 
	207, 208, 209, 210, 5, 198, 199, 200, 
	35, 211, 204, 193, 212, 208, 5, 198, 
	199, 200, 211, 213, 193, 208, 5, 198, 
	199, 200, 211, 213, 193, 214, 18, 215, 
	198, 199, 206, 214, 193, 216, 217, 218, 
	219, 5, 198, 199, 200, 33, 220, 214, 
	193, 221, 217, 5, 198, 199, 200, 220, 
	222, 193, 217, 5, 198, 199, 200, 220, 
	222, 193, 223, 18, 224, 198, 199, 206, 
	223, 193, 225, 226, 227, 228, 5, 198, 
	199, 200, 31, 229, 223, 193, 230, 226, 
	5, 198, 199, 200, 229, 231, 193, 226, 
	5, 198, 199, 200, 229, 231, 193, 232, 
	18, 233, 198, 199, 206, 232, 193, 234, 
	235, 236, 237, 5, 198, 199, 200, 29, 
	238, 232, 193, 239, 235, 5, 198, 199, 
	200, 238, 240, 193, 235, 5, 198, 199, 
	200, 238, 240, 193, 18, 241, 198, 199, 
	206, 193, 198, 199, 206, 193, 242, 199, 
	193, 199, 193, 243, 193, 244, 245, 246, 
	198, 199, 3, 1, 193, 2, 198, 199, 
	193, 198, 199, 193, 244, 198, 199, 193, 
	244, 245, 198, 199, 3, 193, 18, 5, 
	198, 199, 206, 247, 193, 248, 27, 249, 
	250, 8, 198, 199, 206, 193, 27, 249, 
	250, 8, 198, 199, 206, 193, 8, 198, 
	199, 206, 249, 193, 251, 24, 252, 253, 
	11, 198, 199, 206, 193, 24, 252, 253, 
	11, 198, 199, 206, 193, 11, 198, 199, 
	206, 252, 193, 254, 21, 255, 256, 14, 
	198, 199, 206, 193, 21, 255, 256, 14, 
	198, 199, 206, 193, 14, 198, 199, 206, 
	255, 193, 257, 18, 258, 198, 199, 206, 
	193, 18, 258, 198, 199, 206, 193, 259, 
	198, 199, 206, 193, 18, 198, 199, 206, 
	193, 235, 5, 198, 199, 238, 240, 193, 
	1, 2, 18, 241, 198, 199, 206, 1, 
	193, 234, 235, 5, 198, 199, 200, 238, 
	240, 193, 234, 235, 236, 240, 5, 198, 
	199, 200, 29, 238, 193, 232, 260, 5, 
	198, 199, 206, 232, 247, 193, 232, 198, 
	199, 206, 232, 193, 232, 261, 198, 199, 
	206, 232, 193, 232, 260, 198, 199, 206, 
	232, 193, 232, 2, 18, 233, 198, 199, 
	206, 232, 193, 225, 226, 5, 198, 199, 
	200, 229, 231, 193, 225, 226, 227, 231, 
	5, 198, 199, 200, 31, 229, 193, 223, 
	262, 5, 198, 199, 206, 223, 247, 193, 
	223, 198, 199, 206, 223, 193, 223, 263, 
	198, 199, 206, 223, 193, 223, 262, 198, 
	199, 206, 223, 193, 223, 2, 18, 224, 
	198, 199, 206, 223, 193, 216, 217, 5, 
	198, 199, 200, 220, 222, 193, 216, 217, 
	218, 222, 5, 198, 199, 200, 33, 220, 
	193, 214, 264, 5, 198, 199, 206, 214, 
	247, 193, 214, 198, 199, 206, 214, 193, 
	214, 265, 198, 199, 206, 214, 193, 214, 
	264, 198, 199, 206, 214, 193, 214, 2, 
	18, 215, 198, 199, 206, 214, 193, 207, 
	208, 5, 198, 199, 200, 211, 213, 193, 
	207, 208, 209, 213, 5, 198, 199, 200, 
	35, 211, 193, 204, 266, 5, 198, 199, 
	206, 204, 247, 193, 204, 198, 199, 206, 
	204, 193, 204, 267, 198, 199, 206, 204, 
	193, 204, 266, 198, 199, 206, 204, 193, 
	204, 2, 18, 205, 198, 199, 206, 204, 
	193, 194, 195, 5, 198, 199, 200, 201, 
	203, 193, 194, 195, 196, 203, 5, 198, 
	199, 200, 37, 201, 193, 269, 270, 271, 
	272, 43, 273, 274, 75, 275, 268, 276, 
	270, 277, 272, 43, 273, 274, 275, 268, 
	270, 277, 272, 43, 273, 274, 275, 268, 
	278, 56, 279, 273, 274, 280, 278, 268, 
	281, 282, 283, 284, 43, 273, 274, 73, 
	285, 278, 268, 286, 282, 43, 273, 274, 
	285, 287, 268, 282, 43, 273, 274, 285, 
	287, 268, 288, 56, 289, 273, 274, 280, 
	288, 268, 290, 291, 292, 293, 43, 273, 
	274, 71, 294, 288, 268, 295, 291, 43, 
	273, 274, 294, 296, 268, 291, 43, 273, 
	274, 294, 296, 268, 297, 56, 298, 273, 
	274, 280, 297, 268, 299, 300, 301, 302, 
	43, 273, 274, 69, 303, 297, 268, 304, 
	300, 43, 273, 274, 303, 305, 268, 300, 
	43, 273, 274, 303, 305, 268, 306, 56, 
	307, 273, 274, 280, 306, 268, 308, 309, 
	310, 311, 43, 273, 274, 67, 312, 306, 
	268, 313, 309, 43, 273, 274, 312, 314, 
	268, 309, 43, 273, 274, 312, 314, 268, 
	56, 315, 273, 274, 280, 268, 273, 274, 
	280, 268, 316, 274, 268, 274, 268, 317, 
	268, 318, 319, 320, 273, 274, 41, 39, 
	268, 40, 273, 274, 268, 273, 274, 268, 
	318, 273, 274, 268, 318, 319, 273, 274, 
	41, 268, 56, 43, 273, 274, 280, 321, 
	268, 322, 65, 323, 324, 46, 273, 274, 
	280, 268, 65, 323, 324, 46, 273, 274, 
	280, 268, 46, 273, 274, 280, 323, 268, 
	325, 62, 326, 327, 49, 273, 274, 280, 
	268, 62, 326, 327, 49, 273, 274, 280, 
	268, 49, 273, 274, 280, 326, 268, 328, 
	59, 329, 330, 52, 273, 274, 280, 268, 
	59, 329, 330, 52, 273, 274, 280, 268, 
	52, 273, 274, 280, 329, 268, 331, 56, 
	332, 273, 274, 280, 268, 56, 332, 273, 
	274, 280, 268, 333, 273, 274, 280, 268, 
	56, 273, 274, 280, 268, 39, 40, 56, 
	315, 273, 274, 280, 39, 268, 308, 309, 
	43, 273, 274, 312, 314, 268, 308, 309, 
	310, 314, 43, 273, 274, 67, 312, 268, 
	306, 334, 43, 273, 274, 280, 306, 321, 
	268, 306, 273, 274, 280, 306, 268, 306, 
	335, 273, 274, 280, 306, 268, 306, 334, 
	273, 274, 280, 306, 268, 306, 40, 56, 
	307, 273, 274, 280, 306, 268, 299, 300, 
	43, 273, 274, 303, 305, 268, 299, 300, 
	301, 305, 43, 273, 274, 69, 303, 268, 
	297, 336, 43, 273, 274, 280, 297, 321, 
	268, 297, 273, 274, 280, 297, 268, 297, 
	337, 273, 274, 280, 297, 268, 297, 336, 
	273, 274, 280, 297, 268, 297, 40, 56, 
	298, 273, 274, 280, 297, 268, 290, 291, 
	43, 273, 274, 294, 296, 268, 290, 291, 
	292, 296, 43, 273, 274, 71, 294, 268, 
	288, 338, 43, 273, 274, 280, 288, 321, 
	268, 288, 273, 274, 280, 288, 268, 288, 
	339, 273, 274, 280, 288, 268, 288, 338, 
	273, 274, 280, 288, 268, 288, 40, 56, 
	289, 273, 274, 280, 288, 268, 281, 282, 
	43, 273, 274, 285, 287, 268, 281, 282, 
	283, 287, 43, 273, 274, 73, 285, 268, 
	278, 340, 43, 273, 274, 280, 278, 321, 
	268, 278, 273, 274, 280, 278, 268, 278, 
	341, 273, 274, 280, 278, 268, 278, 340, 
	273, 274, 280, 278, 268, 74, 43, 74, 
	42, 268, 278, 40, 56, 279, 273, 274, 
	280, 278, 268, 269, 270, 277, 272, 43, 
	273, 274, 275, 268, 343, 184, 81, 187, 
	188, 190, 344, 342, 184, 81, 187, 188, 
	190, 344, 342, 345, 95, 346, 187, 188, 
	347, 345, 342, 348, 349, 350, 351, 81, 
	187, 188, 112, 352, 345, 342, 353, 349, 
	81, 187, 188, 352, 354, 342, 349, 81, 
	187, 188, 352, 354, 342, 355, 95, 356, 
	187, 188, 347, 355, 342, 357, 358, 359, 
	360, 81, 187, 188, 110, 361, 355, 342, 
	362, 358, 81, 187, 188, 361, 363, 342, 
	358, 81, 187, 188, 361, 363, 342, 364, 
	95, 365, 187, 188, 347, 364, 342, 366, 
	367, 368, 369, 81, 187, 188, 108, 370, 
	364, 342, 371, 367, 81, 187, 188, 370, 
	372, 342, 367, 81, 187, 188, 370, 372, 
	342, 373, 95, 374, 187, 188, 347, 373, 
	342, 375, 376, 377, 378, 81, 187, 188, 
	106, 379, 373, 342, 380, 376, 81, 187, 
	188, 379, 381, 342, 376, 81, 187, 188, 
	379, 381, 342, 95, 382, 187, 188, 347, 
	342, 187, 188, 347, 342, 383, 188, 342, 
	188, 342, 384, 342, 385, 386, 387, 187, 
	188, 79, 77, 342, 78, 187, 188, 342, 
	187, 188, 342, 385, 187, 188, 342, 385, 
	386, 187, 188, 79, 342, 95, 81, 187, 
	188, 347, 388, 342, 389, 104, 390, 391, 
	85, 187, 188, 347, 342, 104, 390, 391, 
	85, 187, 188, 347, 342, 85, 187, 188, 
	347, 390, 342, 392, 101, 393, 394, 88, 
	187, 188, 347, 342, 101, 393, 394, 88, 
	187, 188, 347, 342, 88, 187, 188, 347, 
	393, 342, 395, 98, 396, 397, 91, 187, 
	188, 347, 342, 98, 396, 397, 91, 187, 
	188, 347, 342, 91, 187, 188, 347, 396, 
	342, 398, 95, 399, 187, 188, 347, 342, 
	95, 399, 187, 188, 347, 342, 400, 187, 
	188, 347, 342, 95, 187, 188, 347, 342, 
	77, 78, 95, 382, 187, 188, 347, 77, 
	342, 375, 376, 81, 187, 188, 379, 381, 
	342, 375, 376, 377, 381, 81, 187, 188, 
	106, 379, 342, 373, 401, 81, 187, 188, 
	347, 373, 388, 342, 373, 187, 188, 347, 
	373, 342, 373, 402, 187, 188, 347, 373, 
	342, 373, 401, 187, 188, 347, 373, 342, 
	373, 78, 95, 374, 187, 188, 347, 373, 
	342, 366, 367, 81, 187, 188, 370, 372, 
	342, 366, 367, 368, 372, 81, 187, 188, 
	108, 370, 342, 364, 403, 81, 187, 188, 
	347, 364, 388, 342, 364, 187, 188, 347, 
	364, 342, 364, 404, 187, 188, 347, 364, 
	342, 364, 403, 187, 188, 347, 364, 342, 
	364, 78, 95, 365, 187, 188, 347, 364, 
	342, 357, 358, 81, 187, 188, 361, 363, 
	342, 357, 358, 359, 363, 81, 187, 188, 
	110, 361, 342, 355, 405, 81, 187, 188, 
	347, 355, 388, 342, 355, 187, 188, 347, 
	355, 342, 355, 406, 187, 188, 347, 355, 
	342, 355, 405, 187, 188, 347, 355, 342, 
	355, 78, 95, 356, 187, 188, 347, 355, 
	342, 348, 349, 81, 187, 188, 352, 354, 
	342, 348, 349, 350, 354, 81, 187, 188, 
	112, 352, 342, 345, 407, 81, 187, 188, 
	347, 345, 388, 342, 345, 187, 188, 347, 
	345, 342, 345, 408, 187, 188, 347, 345, 
	342, 345, 407, 187, 188, 347, 345, 342, 
	345, 78, 95, 346, 187, 188, 347, 345, 
	342, 113, 81, 152, 113, 80, 409, 183, 
	184, 81, 187, 188, 190, 344, 342, 113, 
	81, 113, 80, 409, 411, 412, 413, 414, 
	119, 415, 416, 151, 417, 410, 418, 412, 
	119, 415, 416, 417, 414, 410, 412, 119, 
	415, 416, 417, 414, 410, 419, 132, 420, 
	415, 416, 421, 419, 410, 422, 423, 424, 
	425, 119, 415, 416, 149, 426, 419, 410, 
	427, 423, 119, 415, 416, 426, 428, 410, 
	423, 119, 415, 416, 426, 428, 410, 429, 
	132, 430, 415, 416, 421, 429, 410, 431, 
	432, 433, 434, 119, 415, 416, 147, 435, 
	429, 410, 436, 432, 119, 415, 416, 435, 
	437, 410, 432, 119, 415, 416, 435, 437, 
	410, 438, 132, 439, 415, 416, 421, 438, 
	410, 440, 441, 442, 443, 119, 415, 416, 
	145, 444, 438, 410, 445, 441, 119, 415, 
	416, 444, 446, 410, 441, 119, 415, 416, 
	444, 446, 410, 447, 132, 448, 415, 416, 
	421, 447, 410, 449, 450, 451, 452, 119, 
	415, 416, 143, 453, 447, 410, 454, 450, 
	119, 415, 416, 453, 455, 410, 450, 119, 
	415, 416, 453, 455, 410, 132, 456, 415, 
	416, 421, 410, 415, 416, 421, 410, 457, 
	416, 410, 416, 410, 458, 410, 459, 460, 
	461, 415, 416, 117, 115, 410, 116, 415, 
	416, 410, 415, 416, 410, 459, 415, 416, 
	410, 459, 460, 415, 416, 117, 410, 132, 
	119, 415, 416, 421, 462, 410, 463, 141, 
	464, 465, 122, 415, 416, 421, 410, 141, 
	464, 465, 122, 415, 416, 421, 410, 122, 
	415, 416, 421, 464, 410, 466, 138, 467, 
	468, 125, 415, 416, 421, 410, 138, 467, 
	468, 125, 415, 416, 421, 410, 125, 415, 
	416, 421, 467, 410, 469, 135, 470, 471, 
	128, 415, 416, 421, 410, 135, 470, 471, 
	128, 415, 416, 421, 410, 128, 415, 416, 
	421, 470, 410, 472, 132, 473, 415, 416, 
	421, 410, 132, 473, 415, 416, 421, 410, 
	474, 415, 416, 421, 410, 132, 415, 416, 
	421, 410, 115, 116, 132, 456, 415, 416, 
	421, 115, 410, 449, 450, 119, 415, 416, 
	453, 455, 410, 449, 450, 451, 455, 119, 
	415, 416, 143, 453, 410, 447, 475, 119, 
	415, 416, 421, 447, 462, 410, 447, 415, 
	416, 421, 447, 410, 447, 476, 415, 416, 
	421, 447, 410, 447, 475, 415, 416, 421, 
	447, 410, 447, 116, 132, 448, 415, 416, 
	421, 447, 410, 440, 441, 119, 415, 416, 
	444, 446, 410, 440, 441, 442, 446, 119, 
	415, 416, 145, 444, 410, 438, 477, 119, 
	415, 416, 421, 438, 462, 410, 438, 415, 
	416, 421, 438, 410, 438, 478, 415, 416, 
	421, 438, 410, 438, 477, 415, 416, 421, 
	438, 410, 438, 116, 132, 439, 415, 416, 
	421, 438, 410, 431, 432, 119, 415, 416, 
	435, 437, 410, 431, 432, 433, 437, 119, 
	415, 416, 147, 435, 410, 429, 479, 119, 
	415, 416, 421, 429, 462, 410, 429, 415, 
	416, 421, 429, 410, 429, 480, 415, 416, 
	421, 429, 410, 429, 479, 415, 416, 421, 
	429, 410, 429, 116, 132, 430, 415, 416, 
	421, 429, 410, 422, 423, 119, 415, 416, 
	426, 428, 410, 422, 423, 424, 428, 119, 
	415, 416, 149, 426, 410, 419, 481, 119, 
	415, 416, 421, 419, 462, 410, 419, 415, 
	416, 421, 419, 410, 419, 482, 415, 416, 
	421, 419, 410, 419, 481, 415, 416, 421, 
	419, 410, 419, 116, 132, 420, 415, 416, 
	421, 419, 410, 411, 412, 119, 415, 416, 
	417, 414, 410, 181, 182, 183, 184, 483, 
	344, 81, 187, 188, 152, 190, 181, 189, 
	342, 194, 484, 196, 197, 5, 198, 199, 
	200, 37, 201, 181, 193, 204, 182, 183, 
	184, 485, 486, 81, 487, 488, 152, 489, 
	204, 189, 193, 113, 81, 198, 199, 152, 
	490, 80, 193, 491, 2, 408, 187, 188, 
	347, 491, 342, 492, 349, 493, 494, 81, 
	487, 488, 153, 352, 491, 193, 495, 349, 
	81, 487, 488, 352, 354, 193, 349, 81, 
	487, 488, 352, 354, 193, 496, 488, 193, 
	488, 193, 243, 193, 492, 349, 81, 487, 
	488, 352, 354, 193, 492, 349, 493, 354, 
	81, 487, 488, 153, 352, 193, 204, 266, 
	113, 155, 198, 199, 490, 204, 497, 193, 
	498, 179, 499, 500, 157, 487, 488, 501, 
	193, 179, 499, 500, 157, 487, 488, 501, 
	193, 157, 487, 488, 501, 499, 193, 502, 
	176, 503, 504, 160, 487, 488, 501, 193, 
	176, 503, 504, 160, 487, 488, 501, 193, 
	160, 487, 488, 501, 503, 193, 505, 173, 
	506, 507, 163, 487, 488, 501, 193, 173, 
	506, 507, 163, 487, 488, 501, 193, 163, 
	487, 488, 501, 506, 193, 508, 170, 509, 
	487, 488, 501, 193, 170, 509, 487, 488, 
	501, 193, 487, 488, 501, 193, 510, 511, 
	512, 487, 488, 167, 165, 193, 166, 487, 
	488, 193, 487, 488, 193, 510, 487, 488, 
	193, 510, 511, 487, 488, 167, 193, 491, 
	166, 95, 346, 187, 188, 347, 491, 342, 
	0
};

static const short _indic_syllable_machine_trans_targs[] = {
	170, 195, 197, 198, 3, 201, 4, 6, 
	204, 7, 9, 207, 10, 12, 210, 13, 
	15, 16, 191, 18, 19, 209, 21, 22, 
	206, 24, 25, 203, 212, 216, 220, 223, 
	227, 230, 234, 237, 241, 244, 170, 270, 
	272, 273, 39, 276, 40, 42, 279, 43, 
	45, 282, 46, 48, 285, 49, 51, 52, 
	266, 54, 55, 284, 57, 58, 281, 60, 
	61, 278, 287, 290, 294, 297, 301, 304, 
	308, 311, 315, 319, 170, 343, 345, 346, 
	75, 349, 170, 76, 78, 352, 79, 81, 
	355, 82, 84, 358, 85, 87, 88, 339, 
	90, 91, 357, 93, 94, 354, 96, 97, 
	351, 360, 363, 367, 370, 374, 377, 381, 
	384, 388, 170, 418, 420, 421, 110, 424, 
	111, 113, 427, 114, 116, 430, 117, 119, 
	433, 120, 122, 123, 414, 125, 126, 432, 
	128, 129, 429, 131, 132, 426, 435, 438, 
	442, 445, 449, 452, 456, 459, 463, 466, 
	392, 478, 146, 481, 148, 484, 149, 151, 
	487, 152, 154, 490, 155, 493, 495, 496, 
	159, 160, 492, 162, 163, 489, 165, 166, 
	486, 168, 169, 483, 170, 171, 246, 320, 
	322, 391, 393, 340, 342, 394, 390, 467, 
	468, 170, 172, 174, 35, 245, 192, 194, 
	214, 243, 173, 34, 175, 239, 0, 176, 
	178, 33, 238, 236, 177, 32, 179, 232, 
	180, 182, 31, 231, 229, 181, 30, 183, 
	225, 184, 186, 29, 224, 222, 185, 28, 
	187, 218, 188, 190, 27, 217, 215, 189, 
	26, 200, 193, 170, 196, 1, 199, 2, 
	202, 5, 23, 205, 8, 20, 208, 11, 
	17, 211, 14, 213, 219, 221, 226, 228, 
	233, 235, 240, 242, 170, 247, 249, 71, 
	317, 267, 269, 318, 248, 70, 250, 313, 
	36, 251, 253, 69, 312, 310, 252, 68, 
	254, 306, 255, 257, 67, 305, 303, 256, 
	66, 258, 299, 259, 261, 65, 298, 296, 
	260, 64, 262, 292, 263, 265, 63, 291, 
	289, 264, 62, 275, 268, 170, 271, 37, 
	274, 38, 277, 41, 59, 280, 44, 56, 
	283, 47, 53, 286, 50, 288, 293, 295, 
	300, 302, 307, 309, 314, 316, 170, 321, 
	106, 323, 386, 72, 324, 326, 105, 385, 
	383, 325, 104, 327, 379, 328, 330, 103, 
	378, 376, 329, 102, 331, 372, 332, 334, 
	101, 371, 369, 333, 100, 335, 365, 336, 
	338, 99, 364, 362, 337, 98, 348, 341, 
	170, 344, 73, 347, 74, 350, 77, 95, 
	353, 80, 92, 356, 83, 89, 359, 86, 
	361, 366, 368, 373, 375, 380, 382, 387, 
	389, 170, 170, 395, 397, 142, 141, 415, 
	417, 465, 396, 398, 461, 107, 399, 401, 
	140, 460, 458, 400, 139, 402, 454, 403, 
	405, 138, 453, 451, 404, 137, 406, 447, 
	407, 409, 136, 446, 444, 408, 135, 410, 
	440, 411, 413, 134, 439, 437, 412, 133, 
	423, 416, 170, 419, 108, 422, 109, 425, 
	112, 130, 428, 115, 127, 431, 118, 124, 
	434, 121, 436, 441, 443, 448, 450, 455, 
	457, 462, 464, 143, 469, 470, 480, 475, 
	477, 498, 471, 472, 473, 144, 479, 474, 
	476, 145, 482, 147, 167, 156, 485, 150, 
	164, 488, 153, 161, 491, 158, 494, 157, 
	497
};

static const char _indic_syllable_machine_trans_actions[] = {
	27, 5, 0, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 0, 5, 0, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 29, 5, 
	0, 0, 0, 5, 0, 0, 5, 0, 
	0, 5, 0, 0, 5, 0, 0, 0, 
	5, 0, 0, 5, 0, 0, 5, 0, 
	0, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 33, 5, 0, 0, 
	0, 5, 35, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 0, 0, 5, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 5, 40, 5, 40, 5, 40, 5, 
	40, 5, 31, 5, 0, 0, 0, 5, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 0, 0, 5, 0, 0, 5, 
	0, 0, 5, 0, 0, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	40, 37, 0, 5, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 5, 0, 0, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 15, 5, 5, 40, 
	5, 43, 43, 0, 0, 5, 5, 40, 
	5, 17, 5, 5, 0, 5, 0, 0, 
	5, 5, 5, 0, 5, 5, 0, 5, 
	5, 0, 5, 5, 5, 0, 5, 5, 
	5, 5, 0, 5, 5, 5, 0, 5, 
	5, 5, 5, 0, 5, 5, 5, 0, 
	5, 5, 5, 5, 0, 5, 5, 5, 
	0, 5, 0, 7, 0, 0, 5, 0, 
	5, 0, 0, 5, 0, 0, 5, 0, 
	0, 5, 0, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 19, 5, 5, 0, 
	5, 0, 0, 5, 5, 0, 5, 5, 
	0, 5, 5, 0, 5, 5, 5, 0, 
	5, 5, 5, 5, 0, 5, 5, 5, 
	0, 5, 5, 5, 5, 0, 5, 5, 
	5, 0, 5, 5, 5, 5, 0, 5, 
	5, 5, 0, 5, 0, 9, 0, 0, 
	5, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 23, 40, 
	0, 40, 40, 0, 40, 5, 0, 40, 
	5, 40, 0, 40, 40, 40, 5, 0, 
	40, 5, 40, 0, 40, 40, 40, 5, 
	0, 40, 5, 40, 0, 40, 40, 40, 
	5, 0, 40, 5, 40, 0, 40, 0, 
	13, 0, 0, 5, 0, 5, 0, 0, 
	5, 0, 0, 5, 0, 0, 5, 0, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 25, 21, 5, 5, 0, 0, 0, 
	0, 5, 5, 5, 5, 0, 5, 5, 
	0, 5, 5, 5, 0, 5, 5, 5, 
	5, 0, 5, 5, 5, 0, 5, 5, 
	5, 5, 0, 5, 5, 5, 0, 5, 
	5, 5, 5, 0, 5, 5, 5, 0, 
	5, 0, 11, 0, 0, 5, 0, 5, 
	0, 0, 5, 0, 0, 5, 0, 0, 
	5, 0, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 0, 0, 37, 5, 0, 
	0, 5, 5, 37, 37, 0, 37, 37, 
	0, 0, 5, 0, 0, 0, 5, 0, 
	0, 5, 0, 0, 5, 0, 0, 0, 
	5
};

static const char _indic_syllable_machine_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};

static const char _indic_syllable_machine_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 3, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};

static const short _indic_syllable_machine_eof_trans[] = {
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	39, 39, 39, 39, 39, 39, 39, 39, 
	77, 77, 77, 83, 83, 77, 77, 77, 
	77, 77, 77, 77, 77, 77, 77, 77, 
	77, 77, 77, 77, 77, 77, 77, 77, 
	77, 77, 77, 77, 77, 77, 77, 77, 
	83, 77, 77, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 115, 
	115, 115, 115, 115, 115, 115, 115, 77, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 0, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	269, 269, 269, 269, 269, 269, 269, 269, 
	343, 343, 343, 343, 343, 343, 343, 343, 
	343, 343, 343, 343, 343, 343, 343, 343, 
	343, 343, 343, 343, 343, 343, 343, 343, 
	343, 343, 343, 343, 343, 343, 343, 343, 
	343, 343, 343, 343, 343, 343, 343, 343, 
	343, 343, 343, 343, 343, 343, 343, 343, 
	343, 343, 343, 343, 343, 343, 343, 343, 
	343, 343, 343, 343, 343, 343, 343, 343, 
	343, 343, 343, 343, 343, 343, 343, 410, 
	343, 410, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 411, 411, 411, 411, 411, 
	411, 411, 411, 343, 194, 194, 194, 343, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 194, 194, 194, 194, 194, 194, 
	194, 194, 343
};

static const int indic_syllable_machine_start = 170;
static const int indic_syllable_machine_first_final = 170;
static const int indic_syllable_machine_error = -1;

static const int indic_syllable_machine_en_main = 170;


#line 36 "hb-ot-shape-complex-indic-machine.rl"



#line 91 "hb-ot-shape-complex-indic-machine.rl"


#define found_syllable(syllable_type) \
  HB_STMT_START { \
    if (0) fprintf (stderr, "syllable %d..%d %s\n", last, p+1, #syllable_type); \
    for (unsigned int i = last; i < p+1; i++) \
      info[i].syllable() = (syllable_serial << 4) | syllable_type; \
    last = p+1; \
    syllable_serial++; \
    if (unlikely (syllable_serial == 16)) syllable_serial = 1; \
  } HB_STMT_END

static void
find_syllables (hb_buffer_t *buffer)
{
  unsigned int p, pe, eof, ts HB_UNUSED, te, act;
  int cs;
  hb_glyph_info_t *info = buffer->info;
  
#line 1345 "hb-ot-shape-complex-indic-machine.hh"
	{
	cs = indic_syllable_machine_start;
	ts = 0;
	te = 0;
	act = 0;
	}

#line 112 "hb-ot-shape-complex-indic-machine.rl"


  p = 0;
  pe = eof = buffer->len;

  unsigned int last = 0;
  unsigned int syllable_serial = 1;
  
#line 1351 "hb-ot-shape-complex-indic-machine.hh"
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const unsigned char *_keys;

	if ( p == pe )
		goto _test_eof;
_resume:
	_acts = _indic_syllable_machine_actions + _indic_syllable_machine_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
#line 1 "NONE"
	{ts = p;}
	break;
#line 1368 "hb-ot-shape-complex-indic-machine.hh"
		}
	}

	_keys = _indic_syllable_machine_trans_keys + _indic_syllable_machine_key_offsets[cs];
	_trans = _indic_syllable_machine_index_offsets[cs];

	_klen = _indic_syllable_machine_single_lengths[cs];
	if ( _klen > 0 ) {
		const unsigned char *_lower = _keys;
		const unsigned char *_mid;
		const unsigned char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( ( info[p].indic_category()) < *_mid )
				_upper = _mid - 1;
			else if ( ( info[p].indic_category()) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _indic_syllable_machine_range_lengths[cs];
	if ( _klen > 0 ) {
		const unsigned char *_lower = _keys;
		const unsigned char *_mid;
		const unsigned char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( ( info[p].indic_category()) < _mid[0] )
				_upper = _mid - 2;
			else if ( ( info[p].indic_category()) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _indic_syllable_machine_indicies[_trans];
_eof_trans:
	cs = _indic_syllable_machine_trans_targs[_trans];

	if ( _indic_syllable_machine_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _indic_syllable_machine_actions + _indic_syllable_machine_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
#line 1 "NONE"
	{te = p+1;}
	break;
	case 3:
#line 83 "hb-ot-shape-complex-indic-machine.rl"
	{act = 1;}
	break;
	case 4:
#line 86 "hb-ot-shape-complex-indic-machine.rl"
	{act = 4;}
	break;
	case 5:
#line 87 "hb-ot-shape-complex-indic-machine.rl"
	{act = 5;}
	break;
	case 6:
#line 83 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (consonant_syllable); }}
	break;
	case 7:
#line 84 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (vowel_syllable); }}
	break;
	case 8:
#line 85 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (standalone_cluster); }}
	break;
	case 9:
#line 86 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (broken_cluster); }}
	break;
	case 10:
#line 87 "hb-ot-shape-complex-indic-machine.rl"
	{te = p+1;{ found_syllable (non_indic_cluster); }}
	break;
	case 11:
#line 83 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (consonant_syllable); }}
	break;
	case 12:
#line 84 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (vowel_syllable); }}
	break;
	case 13:
#line 85 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (standalone_cluster); }}
	break;
	case 14:
#line 86 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (broken_cluster); }}
	break;
	case 15:
#line 87 "hb-ot-shape-complex-indic-machine.rl"
	{te = p;p--;{ found_syllable (non_indic_cluster); }}
	break;
	case 16:
#line 83 "hb-ot-shape-complex-indic-machine.rl"
	{{p = ((te))-1;}{ found_syllable (consonant_syllable); }}
	break;
	case 17:
#line 84 "hb-ot-shape-complex-indic-machine.rl"
	{{p = ((te))-1;}{ found_syllable (vowel_syllable); }}
	break;
	case 18:
#line 85 "hb-ot-shape-complex-indic-machine.rl"
	{{p = ((te))-1;}{ found_syllable (standalone_cluster); }}
	break;
	case 19:
#line 86 "hb-ot-shape-complex-indic-machine.rl"
	{{p = ((te))-1;}{ found_syllable (broken_cluster); }}
	break;
	case 20:
#line 1 "NONE"
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;} found_syllable (consonant_syllable); }
	break;
	case 4:
	{{p = ((te))-1;} found_syllable (broken_cluster); }
	break;
	case 5:
	{{p = ((te))-1;} found_syllable (non_indic_cluster); }
	break;
	}
	}
	break;
#line 1501 "hb-ot-shape-complex-indic-machine.hh"
		}
	}

_again:
	_acts = _indic_syllable_machine_actions + _indic_syllable_machine_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
#line 1 "NONE"
	{ts = 0;}
	break;
#line 1512 "hb-ot-shape-complex-indic-machine.hh"
		}
	}

	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _indic_syllable_machine_eof_trans[cs] > 0 ) {
		_trans = _indic_syllable_machine_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	}

#line 121 "hb-ot-shape-complex-indic-machine.rl"

}

#endif /* HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH */
